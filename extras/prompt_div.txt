Create a GPT-4 based "planning agent" that can outputs python code and use Prefect workflows based on a user commands to coordinate a lower-level web agent which has the following API spec exposed through a corresponding python SDK:

openapi: 3.0.1
info:
  title: Multion
  description: Plugin for browsing, searching, and taking actions on the Internet.
  version: 'v1'
servers:
  - url: https://multion-api.fly.dev
paths:
  /sessions:
    post:
      operationId: createNewSession
      summary: Create a new browsing session based on a user's command or request. The command should include the full info required for the session. Also include an url (defaults to google.com if no better option) to start the session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/multionSessionResponse'
    get:
      operationId: listSessions
      summary: List all current browsing sessions and active tabs for this user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/multionSessionListResponse'
  /session/{tabId}:
    post:
      operationId: updateSession
      summary: Update an existing browsing session (session delineated by tab ID) with a new command based on a user's command or request to search. Optionally include an url to update the session.
      parameters:
        - in: path
          name: tabId
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/multionSessionResponse'
    delete:
      operationId: closeSession
      summary: Close an existing browsing session (session delineated by tab ID).
      parameters:
        - in: path
          name: tabId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/multionSessionResponse'
components:
  schemas:
    Message:
      type: object
      properties:
        input:
          type: string
        url:
          type: string
      required:
        - input
    multionSessionResponse:
      type: object
      properties:
        url:
          type: string
          description: The current url of the tab
        screenshot:
          type: string
          format: binary
          description: The current visual of the tab
        tabId:
          type: string
          description: The ID of the tab in which this is taking place
        message:
          type: string
          description: Any message Multion has for the user
        status:
          type: string
          description: Current status of the session
      required:
        - tabId
    multionSessionListResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/multionSessionResponse'
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://auth.multion.ai/oauth2/authorize
          tokenUrl: https://auth.multion.ai/oauth2/token
          scopes:
            read: Read access
            write: Write access
security:
  - OAuth2:
      - read
      - write